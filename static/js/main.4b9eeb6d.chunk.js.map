{"version":3,"sources":["js/actions/index.js","js/constants/action-types.js","js/components/card.js","js/components/loading.js","js/components/home.js","js/components/login.js","js/components/tag.js","js/components/profile.js","js/App.js","serviceWorker.js","js/reducers/index.js","js/store/index.js","index.js"],"names":["userProfile","payload","type","Card","color","this","props","className","style","background","src","image","alt","getColor","title","detail","subDetail","width","onClick","id","havingImage","noImage","Component","Loading","ConnectedHome","users","length","map","item","EnhancedCard","key","getUserList","to","undefined","profileImage","firstName","lastName","phone","email","getUserProfile","Home","connect","state","dispatch","profileId","bgColor","Login","Tag","faIcon","ConnectedProfile","addressRows","Object","keys","profile","address","index","split","letter","toUpperCase","toLowerCase","join","getAddress","Profile","ConnectedApp","userList","basename","path","component","routerProps","EnhancedMyProfile","myprofile","EnhancedProfile","EnhancedHome","withAuth","withHeader","setMyProfile","match","params","console","log","loggedStatus","location","pathname","App","fetch","then","res","json","data","Boolean","window","hostname","initialState","activeNav","testapi","rootReducer","action","assign","find","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b9eeb6d.chunk.js","sourcesContent":["import {LOGGED_STATUS, ACTIVE_NAV, USER_LIST, USER_PROFILE,MY_PROFILE} from \"../constants/action-types\";\n\nexport function userList(payload) {\n  return {type: USER_LIST, payload};\n}\n\nexport function activeNav(payload) {\n  return {type: ACTIVE_NAV, payload};\n}\n\nexport function loggedStatus(payload) {\n  return {type: LOGGED_STATUS, payload};\n}\n\nexport function userProfile(payload) {\n  return {type: USER_PROFILE, payload};\n}\n\nexport function setMyProfile(payload) {\n  return {type: MY_PROFILE, payload};\n}\n","export const LOGGED_STATUS = 'LOGGED_STATUS';\nexport const ACTIVE_NAV = 'ACTIVE_NAV';\nexport const USER_LIST = 'USER_LIST';\nexport const USER_PROFILE = 'USER_PROFILE';\nexport const MY_PROFILE = 'MY_PROFILE';","import React, {Component} from 'react';\n\nclass Card extends Component {\n\n  getColor() {\n    return {color: this.props.color};\n  }\n\n  havingImage() {\n    return (\n      <div className='card-component clearfix' style={{background: this.props.background}}>\n        <div className='card-img'>\n          <img src={this.props.image} alt=\"image\"/>\n        </div>\n        <div className='card-text' style={this.getColor()}>\n          <strong>{this.props.title}</strong>\n          <p>{this.props.detail}</p>\n          <p>{this.props.subDetail}</p>\n        </div>\n      </div>\n    );\n  }\n\n  noImage() {\n    return (\n      <div className='card-component clearfix' style={{background: this.props.background}}>\n        <div className='card' style={this.getColor()}>\n          <strong>{this.props.title}</strong>\n          <p>{this.props.detail}</p>\n          <p>{this.props.subDetail}</p>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <li style={{width: this.props.width}} onClick={()=>this.props.onClick(this.props.id,this.props.color,this.props.background)}>\n        {this.props.image ? this.havingImage() : this.noImage()}\n      </li>\n    );\n  }\n}\n\nexport default Card;","import React, {Component} from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className='loading'>\n        <div className='loading-spinner'>\n          <i className='fa fa-spinner'/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loading;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {userProfile} from \"../actions\";\nimport {Link} from \"react-router-dom\";\nimport Card from \"./card\";\nimport Loading from \"./loading\";\n\nconst mapStateToProps = state => {\n  return {users: state.users};\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getUserProfile: (profileId, color, bgColor) => {\n      dispatch(userProfile({profileId: profileId, color: color, bgColor: bgColor}))\n    }\n  };\n}\n\nclass ConnectedHome extends Component {\n\n  getUserList() {\n    if (this.props.users.length !== 0) {\n      return this.props.users.map(item => (\n        <EnhancedCard key={item.id} {...this.props} item={item}/>\n      ))\n    } else {\n      return <Loading/>\n    }\n  }\n\n  render() {\n    return (\n      <div className='user-list'>\n        <ul className='clearfix'>\n          {this.getUserList()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst EnhancedCard = withRouter(Card);\n\nfunction withRouter(Card) {\n  return function (props) {\n    return (\n      <Link to={'/profile/' + props.item.id}>\n        <Card\n          key={props.item.id}\n          id={props.item.id}\n          width={300}\n          background={(props.item.id % 4 === 0) ? '#F2AA4C' : undefined}\n          color={(props.item.id % 4 === 0) ? '#101820' : undefined}\n          image={props.item.profileImage}\n          title={props.item.firstName + props.item.lastName}\n          detail={props.item.phone}\n          subDetail={props.item.email}\n          onClick={props.getUserProfile}\n        />\n      </Link>\n    );\n  }\n}\n\nconst Home = connect(mapStateToProps, mapDispatchToProps)(ConnectedHome);\n\nexport default Home;\n","import React, {Component} from 'react';\n\nclass Login extends Component {\n  render() {\n    return (\n      <div>\n        Login\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\n\nfunction Tag(props) {\n  return (\n    <div className='tag'>\n      <i className={'fa fa-' + (props.faIcon)}/>\n      <span>{props.title}</span>\n    </div>\n  );\n}\n\nexport default Tag;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Tag from \"./tag\";\n\nconst mapStateToProps = state => {\n  return {color: state.color, bgColor: state.bgColor, profile: state.profile};\n};\n\nclass ConnectedProfile extends Component {\n  getAddress() {\n    const addressRows = Object.keys(this.props.profile.address).map((item, index) => {\n      return (\n        <tr key={index}>\n          <td>\n            <strong>\n              {(item.split('').map(function (letter) {\n                if (letter === letter.toUpperCase())\n                  return ' ' + letter.toLowerCase();\n                else\n                  return letter;\n              })).join('')}\n            </strong>\n          </td>\n          <td>{this.props.profile.address[item]}</td>\n        </tr>\n      );\n    });\n    return (\n      <div className='profile-address'>\n        <table>\n          <tbody>\n          {addressRows}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className='user-profile'>\n        <div className='profile-top'>\n          <div className='bg-profile-image'>\n            <img src={this.props.profile.profileImage} alt=\"image\"/>\n          </div>\n          <div className='profile-image' style={{background: 'linear-gradient(to bottom,transparent,' + this.props.bgColor + ')'}}>\n            <img src={this.props.profile.profileImage} alt=\"image\"/>\n          </div>\n        </div>\n        <div className='profile-detail' style={{color: this.props.color, background: this.props.bgColor}}>\n          <h1>{this.props.profile.firstName} {this.props.profile.lastName}</h1>\n          <Tag faIcon='envelope' title={this.props.profile.email}/>\n          <Tag faIcon='phone' title={this.props.profile.phone}/>\n          {this.getAddress()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Profile = connect(mapStateToProps)(ConnectedProfile);\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Home from './components/home';\nimport Login from './components/login';\nimport Profile from \"./components/profile\";\nimport {connect} from \"react-redux\";\nimport {setMyProfile, userList, userProfile} from \"./actions\";\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    userList: () => (\n      fetch('https://mock-io.herokuapp.com/users')\n        .then(res => res.json())\n        .then(data => dispatch(userList(data)))\n    ),\n    setMyProfile: () => (dispatch(setMyProfile('my-profile'))),\n    userProfile: (data) => (dispatch(userProfile(data)))\n  };\n}\n\nclass ConnectedApp extends Component {\n  componentDidMount() {\n    this.props.userList();\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <Router basename=\"/userprofiles-react\">\n          <div>\n            <Switch>\n              <Route path=\"/my-profile\"\n                     component={(routerProps) => <EnhancedMyProfile {...routerProps} {...this.props}\n                                                                    myprofile={true}/>}/>\n              <Route path=\"/profile/:id\" component={(routerProps) => <EnhancedProfile {...routerProps} {...this.props}\n                                                                                      myprofile={false}/>}/>\n              <Route path='/' component={(routerProps) => <EnhancedHome {...routerProps} {...this.props}/>}/>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst EnhancedHome = withAuth(withHeader(Home));\nconst EnhancedProfile = withAuth(withBack(Profile));\nconst EnhancedMyProfile = withAuth(withHeader(Profile));\n\n/**\n * Auth check\n * @param Component\n * @returns {Function}\n */\nfunction withAuth(Component) {\n  return function (props) {\n    if (props.myprofile) {\n      props.setMyProfile();\n    }else{\n      if (!props.profile){\n       props.userProfile({profileId:props.match.params.id})\n      }\n      console.log(props);\n    }\n    if (props.loggedStatus)\n      return <Component {...props}/>;\n    else\n      return <Login/>;\n  }\n}\n\n/**\n * with navigation header\n * @param Component\n * @returns {function(*): *}\n */\nfunction withHeader(Component) {\n  return function (props) {\n    return (\n      <div>\n        <div className='header'>\n          <nav className='navbar clearfix'>\n            <ul>\n              <li className={(props.location.pathname === '/') ? 'active' : ''}>\n                <Link to='/'>People</Link>\n              </li>\n              <li className={(props.location.pathname === '/my-profile') ? 'active' : ''}>\n                <Link to='/my-profile'>My\n                  Profile</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div className='content'>\n          <Component {...props}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * with back button removing header\n * @param Component\n * @returns {function(*): *}\n */\nfunction withBack(Component) {\n  return function (props) {\n    return (\n      <div>\n        <div className='header'>\n          <div className='profile-nav'>\n            <Link to='/'><i\n              className='fa fa-arrow-circle-o-left'/></Link>\n            People\n          </div>\n        </div>\n        <div className='content'>\n          <Component {...props}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(ConnectedApp);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGGED_STATUS, ACTIVE_NAV, USER_LIST, USER_PROFILE, MY_PROFILE} from \"../constants/action-types\";\nimport testapi from '../../test';\n\nconst USER_ID = 1;\n\nconst initialState = {\n  loggedStatus: true,\n  activeNav: 'home',\n  users: [],\n  profileId: USER_ID,\n  profile: undefined\n};\nif (initialState.users.length===0) {\n  initialState.users = testapi;\n}\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER_LIST:\n      return Object.assign({}, state, {users: action.payload});\n    case LOGGED_STATUS:\n      return Object.assign({}, state, {loggedStatus: action.payload});\n    case ACTIVE_NAV:\n      return Object.assign({}, state, {\n        activeNav: action.payload,\n        profile: state.users.find(function (item) {\n          return item.id === USER_ID;\n        })\n      });\n    case MY_PROFILE:\n      return Object.assign({}, state, {\n        activeNav: action.payload,\n        profile: state.users.find(function (item) {\n          return item.id === USER_ID;\n        })\n      });\n    case USER_PROFILE:\n      return Object.assign({}, state, {\n        activeNav: 'profile',\n        profileId: action.payload.profileId,\n        color: action.payload.color || undefined,\n        bgColor: action.payload.bgColor || undefined,\n        profile: state.users.find(function (item) {\n          return item.id == action.payload.profileId;\n        })\n      });\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import {createStore} from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Styles\n\nimport './css/reset.css';\nimport 'font-awesome/css/font-awesome.css'\nimport './css/style.css';\nimport './css/media.css';\n\nimport App from './js/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./js/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}